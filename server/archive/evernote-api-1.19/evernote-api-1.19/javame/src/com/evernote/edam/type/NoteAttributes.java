/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */
package com.evernote.edam.type;

import java.util.Hashtable;
import java.util.Vector;
import java.util.Enumeration;

import org.apache.thrift.*;
import org.apache.thrift.meta_data.*;
import org.apache.thrift.transport.*;
import org.apache.thrift.protocol.*;

/**
 * The list of optional attributes that can be stored on a note.
 * <dl>
 * <dt>subjectDate</dt>
 *   <dd>time that the note refers to
 *   </dd>
 * 
 * <dt>latitude</dt>
 *   <dd>the latitude where the note was taken
 *   </dd>
 * 
 * <dt>longitude</dt>
 *   <dd>the longitude where the note was taken
 *   </dd>
 * 
 * <dt>altitude</dt>
 *   <dd>the altitude where the note was taken
 *   </dd>
 * 
 * <dt>author</dt>
 *   <dd>the author of the content of the note
 *   <br/>
 *   Length:  EDAM_ATTRIBUTE_LEN_MIN - EDAM_ATTRIBUTE_LEN_MAX
 *   </dd>
 * 
 * <dt>source</dt>
 *   <dd>the method that the note was added to the account, if the
 *   note wasn't directly authored in an Evernote client.
 *   <br/>
 *   Length:  EDAM_ATTRIBUTE_LEN_MIN - EDAM_ATTRIBUTE_LEN_MAX
 *   </dd>
 * 
 * <dt>sourceURL</dt>
 *   <dd>the original location where the resource was hosted
 *   <br/>
 *   Length:  EDAM_ATTRIBUTE_LEN_MIN - EDAM_ATTRIBUTE_LEN_MAX
 *   </dd>
 * 
 * <dt>sourceApplication</dt>
 *   <dd>an identifying string for the application that
 *   created this note.  This string does not have a guaranteed syntax or
 *   structure -- it is intended for human inspection and tracking.
 *   <br/>
 *   Length:  EDAM_ATTRIBUTE_LEN_MIN - EDAM_ATTRIBUTE_LEN_MAX
 *   </dd>
 * 
 * <dt>shareDate</dt>
 *  <dd>The date and time when this note was directly shared via its own URL.
 *  This is only set on notes that were individually shared, it's independent
 *  of any notebook-level sharing of the containing notepbook.  This field
 *  is treated as "read-only" for clients ... the server will ignore changes
 *  to this field from an external client.
 *  </dd>
 * 
 * </dl>
 */
public class NoteAttributes implements TBase {
  private static final TStruct STRUCT_DESC = new TStruct("NoteAttributes");

  private static final TField SUBJECT_DATE_FIELD_DESC = new TField("subjectDate", TType.I64, (short)1);
  private static final TField LATITUDE_FIELD_DESC = new TField("latitude", TType.DOUBLE, (short)10);
  private static final TField LONGITUDE_FIELD_DESC = new TField("longitude", TType.DOUBLE, (short)11);
  private static final TField ALTITUDE_FIELD_DESC = new TField("altitude", TType.DOUBLE, (short)12);
  private static final TField AUTHOR_FIELD_DESC = new TField("author", TType.STRING, (short)13);
  private static final TField SOURCE_FIELD_DESC = new TField("source", TType.STRING, (short)14);
  private static final TField SOURCE_URL_FIELD_DESC = new TField("sourceURL", TType.STRING, (short)15);
  private static final TField SOURCE_APPLICATION_FIELD_DESC = new TField("sourceApplication", TType.STRING, (short)16);
  private static final TField SHARE_DATE_FIELD_DESC = new TField("shareDate", TType.I64, (short)17);

  private long subjectDate;
  private double latitude;
  private double longitude;
  private double altitude;
  private String author;
  private String source;
  private String sourceURL;
  private String sourceApplication;
  private long shareDate;

  // isset id assignments
  private static final int __SUBJECTDATE_ISSET_ID = 0;
  private static final int __LATITUDE_ISSET_ID = 1;
  private static final int __LONGITUDE_ISSET_ID = 2;
  private static final int __ALTITUDE_ISSET_ID = 3;
  private static final int __SHAREDATE_ISSET_ID = 4;
  private boolean[] __isset_vector = new boolean[5];

  public NoteAttributes() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public NoteAttributes(NoteAttributes other) {
    System.arraycopy(other.__isset_vector, 0, __isset_vector, 0, other.__isset_vector.length);
    this.subjectDate = other.subjectDate;
    this.latitude = other.latitude;
    this.longitude = other.longitude;
    this.altitude = other.altitude;
    if (other.isSetAuthor()) {
      this.author = other.author;
    }
    if (other.isSetSource()) {
      this.source = other.source;
    }
    if (other.isSetSourceURL()) {
      this.sourceURL = other.sourceURL;
    }
    if (other.isSetSourceApplication()) {
      this.sourceApplication = other.sourceApplication;
    }
    this.shareDate = other.shareDate;
  }

  public NoteAttributes deepCopy() {
    return new NoteAttributes(this);
  }

  public NoteAttributes clone() {
    return new NoteAttributes(this);
  }

  public void clear() {
    setSubjectDateIsSet(false);
    this.subjectDate = 0;
    setLatitudeIsSet(false);
    this.latitude = 0.0;
    setLongitudeIsSet(false);
    this.longitude = 0.0;
    setAltitudeIsSet(false);
    this.altitude = 0.0;
    this.author = null;
    this.source = null;
    this.sourceURL = null;
    this.sourceApplication = null;
    setShareDateIsSet(false);
    this.shareDate = 0;
  }

  public long getSubjectDate() {
    return this.subjectDate;
  }

  public void setSubjectDate(long subjectDate) {
    this.subjectDate = subjectDate;
    setSubjectDateIsSet(true);
  }

  public void unsetSubjectDate() {
    __isset_vector[__SUBJECTDATE_ISSET_ID] = false;
  }

  /** Returns true if field subjectDate is set (has been asigned a value) and false otherwise */
  public boolean isSetSubjectDate() {
    return __isset_vector[__SUBJECTDATE_ISSET_ID];
  }

  public void setSubjectDateIsSet(boolean value) {
    __isset_vector[__SUBJECTDATE_ISSET_ID] = value;
  }

  public double getLatitude() {
    return this.latitude;
  }

  public void setLatitude(double latitude) {
    this.latitude = latitude;
    setLatitudeIsSet(true);
  }

  public void unsetLatitude() {
    __isset_vector[__LATITUDE_ISSET_ID] = false;
  }

  /** Returns true if field latitude is set (has been asigned a value) and false otherwise */
  public boolean isSetLatitude() {
    return __isset_vector[__LATITUDE_ISSET_ID];
  }

  public void setLatitudeIsSet(boolean value) {
    __isset_vector[__LATITUDE_ISSET_ID] = value;
  }

  public double getLongitude() {
    return this.longitude;
  }

  public void setLongitude(double longitude) {
    this.longitude = longitude;
    setLongitudeIsSet(true);
  }

  public void unsetLongitude() {
    __isset_vector[__LONGITUDE_ISSET_ID] = false;
  }

  /** Returns true if field longitude is set (has been asigned a value) and false otherwise */
  public boolean isSetLongitude() {
    return __isset_vector[__LONGITUDE_ISSET_ID];
  }

  public void setLongitudeIsSet(boolean value) {
    __isset_vector[__LONGITUDE_ISSET_ID] = value;
  }

  public double getAltitude() {
    return this.altitude;
  }

  public void setAltitude(double altitude) {
    this.altitude = altitude;
    setAltitudeIsSet(true);
  }

  public void unsetAltitude() {
    __isset_vector[__ALTITUDE_ISSET_ID] = false;
  }

  /** Returns true if field altitude is set (has been asigned a value) and false otherwise */
  public boolean isSetAltitude() {
    return __isset_vector[__ALTITUDE_ISSET_ID];
  }

  public void setAltitudeIsSet(boolean value) {
    __isset_vector[__ALTITUDE_ISSET_ID] = value;
  }

  public String getAuthor() {
    return this.author;
  }

  public void setAuthor(String author) {
    this.author = author;
  }

  public void unsetAuthor() {
    this.author = null;
  }

  /** Returns true if field author is set (has been asigned a value) and false otherwise */
  public boolean isSetAuthor() {
    return this.author != null;
  }

  public void setAuthorIsSet(boolean value) {
    if (!value) {
      this.author = null;
    }
  }

  public String getSource() {
    return this.source;
  }

  public void setSource(String source) {
    this.source = source;
  }

  public void unsetSource() {
    this.source = null;
  }

  /** Returns true if field source is set (has been asigned a value) and false otherwise */
  public boolean isSetSource() {
    return this.source != null;
  }

  public void setSourceIsSet(boolean value) {
    if (!value) {
      this.source = null;
    }
  }

  public String getSourceURL() {
    return this.sourceURL;
  }

  public void setSourceURL(String sourceURL) {
    this.sourceURL = sourceURL;
  }

  public void unsetSourceURL() {
    this.sourceURL = null;
  }

  /** Returns true if field sourceURL is set (has been asigned a value) and false otherwise */
  public boolean isSetSourceURL() {
    return this.sourceURL != null;
  }

  public void setSourceURLIsSet(boolean value) {
    if (!value) {
      this.sourceURL = null;
    }
  }

  public String getSourceApplication() {
    return this.sourceApplication;
  }

  public void setSourceApplication(String sourceApplication) {
    this.sourceApplication = sourceApplication;
  }

  public void unsetSourceApplication() {
    this.sourceApplication = null;
  }

  /** Returns true if field sourceApplication is set (has been asigned a value) and false otherwise */
  public boolean isSetSourceApplication() {
    return this.sourceApplication != null;
  }

  public void setSourceApplicationIsSet(boolean value) {
    if (!value) {
      this.sourceApplication = null;
    }
  }

  public long getShareDate() {
    return this.shareDate;
  }

  public void setShareDate(long shareDate) {
    this.shareDate = shareDate;
    setShareDateIsSet(true);
  }

  public void unsetShareDate() {
    __isset_vector[__SHAREDATE_ISSET_ID] = false;
  }

  /** Returns true if field shareDate is set (has been asigned a value) and false otherwise */
  public boolean isSetShareDate() {
    return __isset_vector[__SHAREDATE_ISSET_ID];
  }

  public void setShareDateIsSet(boolean value) {
    __isset_vector[__SHAREDATE_ISSET_ID] = value;
  }

  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof NoteAttributes)
      return this.equals((NoteAttributes)that);
    return false;
  }

  public boolean equals(NoteAttributes that) {
    if (that == null)
      return false;

    boolean this_present_subjectDate = true && this.isSetSubjectDate();
    boolean that_present_subjectDate = true && that.isSetSubjectDate();
    if (this_present_subjectDate || that_present_subjectDate) {
      if (!(this_present_subjectDate && that_present_subjectDate))
        return false;
      if (this.subjectDate != that.subjectDate)
        return false;
    }

    boolean this_present_latitude = true && this.isSetLatitude();
    boolean that_present_latitude = true && that.isSetLatitude();
    if (this_present_latitude || that_present_latitude) {
      if (!(this_present_latitude && that_present_latitude))
        return false;
      if (this.latitude != that.latitude)
        return false;
    }

    boolean this_present_longitude = true && this.isSetLongitude();
    boolean that_present_longitude = true && that.isSetLongitude();
    if (this_present_longitude || that_present_longitude) {
      if (!(this_present_longitude && that_present_longitude))
        return false;
      if (this.longitude != that.longitude)
        return false;
    }

    boolean this_present_altitude = true && this.isSetAltitude();
    boolean that_present_altitude = true && that.isSetAltitude();
    if (this_present_altitude || that_present_altitude) {
      if (!(this_present_altitude && that_present_altitude))
        return false;
      if (this.altitude != that.altitude)
        return false;
    }

    boolean this_present_author = true && this.isSetAuthor();
    boolean that_present_author = true && that.isSetAuthor();
    if (this_present_author || that_present_author) {
      if (!(this_present_author && that_present_author))
        return false;
      if (!this.author.equals(that.author))
        return false;
    }

    boolean this_present_source = true && this.isSetSource();
    boolean that_present_source = true && that.isSetSource();
    if (this_present_source || that_present_source) {
      if (!(this_present_source && that_present_source))
        return false;
      if (!this.source.equals(that.source))
        return false;
    }

    boolean this_present_sourceURL = true && this.isSetSourceURL();
    boolean that_present_sourceURL = true && that.isSetSourceURL();
    if (this_present_sourceURL || that_present_sourceURL) {
      if (!(this_present_sourceURL && that_present_sourceURL))
        return false;
      if (!this.sourceURL.equals(that.sourceURL))
        return false;
    }

    boolean this_present_sourceApplication = true && this.isSetSourceApplication();
    boolean that_present_sourceApplication = true && that.isSetSourceApplication();
    if (this_present_sourceApplication || that_present_sourceApplication) {
      if (!(this_present_sourceApplication && that_present_sourceApplication))
        return false;
      if (!this.sourceApplication.equals(that.sourceApplication))
        return false;
    }

    boolean this_present_shareDate = true && this.isSetShareDate();
    boolean that_present_shareDate = true && that.isSetShareDate();
    if (this_present_shareDate || that_present_shareDate) {
      if (!(this_present_shareDate && that_present_shareDate))
        return false;
      if (this.shareDate != that.shareDate)
        return false;
    }

    return true;
  }

  public int hashCode() {
    return 0;
  }

  public int compareTo(Object otherObject) {
    if (!getClass().equals(otherObject.getClass())) {
      return getClass().getName().compareTo(otherObject.getClass().getName());
    }

    NoteAttributes other = (NoteAttributes)otherObject;    int lastComparison = 0;

    lastComparison = TBaseHelper.compareTo(isSetSubjectDate(), other.isSetSubjectDate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSubjectDate()) {
      lastComparison = TBaseHelper.compareTo(this.subjectDate, other.subjectDate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetLatitude(), other.isSetLatitude());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLatitude()) {
      lastComparison = TBaseHelper.compareTo(this.latitude, other.latitude);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetLongitude(), other.isSetLongitude());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLongitude()) {
      lastComparison = TBaseHelper.compareTo(this.longitude, other.longitude);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetAltitude(), other.isSetAltitude());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAltitude()) {
      lastComparison = TBaseHelper.compareTo(this.altitude, other.altitude);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetAuthor(), other.isSetAuthor());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAuthor()) {
      lastComparison = TBaseHelper.compareTo(this.author, other.author);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetSource(), other.isSetSource());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSource()) {
      lastComparison = TBaseHelper.compareTo(this.source, other.source);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetSourceURL(), other.isSetSourceURL());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSourceURL()) {
      lastComparison = TBaseHelper.compareTo(this.sourceURL, other.sourceURL);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetSourceApplication(), other.isSetSourceApplication());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSourceApplication()) {
      lastComparison = TBaseHelper.compareTo(this.sourceApplication, other.sourceApplication);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetShareDate(), other.isSetShareDate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetShareDate()) {
      lastComparison = TBaseHelper.compareTo(this.shareDate, other.shareDate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public void read(TProtocol iprot) throws TException {
    TField field;
    iprot.readStructBegin();
    while (true)
    {
      field = iprot.readFieldBegin();
      if (field.type == TType.STOP) { 
        break;
      }
      switch (field.id) {
        case 1: // SUBJECT_DATE
          if (field.type == TType.I64) {
            this.subjectDate = iprot.readI64();
            setSubjectDateIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 10: // LATITUDE
          if (field.type == TType.DOUBLE) {
            this.latitude = iprot.readDouble();
            setLatitudeIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 11: // LONGITUDE
          if (field.type == TType.DOUBLE) {
            this.longitude = iprot.readDouble();
            setLongitudeIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 12: // ALTITUDE
          if (field.type == TType.DOUBLE) {
            this.altitude = iprot.readDouble();
            setAltitudeIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 13: // AUTHOR
          if (field.type == TType.STRING) {
            this.author = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 14: // SOURCE
          if (field.type == TType.STRING) {
            this.source = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 15: // SOURCE_URL
          if (field.type == TType.STRING) {
            this.sourceURL = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 16: // SOURCE_APPLICATION
          if (field.type == TType.STRING) {
            this.sourceApplication = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 17: // SHARE_DATE
          if (field.type == TType.I64) {
            this.shareDate = iprot.readI64();
            setShareDateIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        default:
          TProtocolUtil.skip(iprot, field.type);
      }
      iprot.readFieldEnd();
    }
    iprot.readStructEnd();
    validate();
  }

  public void write(TProtocol oprot) throws TException {
    validate();

    oprot.writeStructBegin(STRUCT_DESC);
    if (isSetSubjectDate()) {
      oprot.writeFieldBegin(SUBJECT_DATE_FIELD_DESC);
      oprot.writeI64(this.subjectDate);
      oprot.writeFieldEnd();
    }
    if (isSetLatitude()) {
      oprot.writeFieldBegin(LATITUDE_FIELD_DESC);
      oprot.writeDouble(this.latitude);
      oprot.writeFieldEnd();
    }
    if (isSetLongitude()) {
      oprot.writeFieldBegin(LONGITUDE_FIELD_DESC);
      oprot.writeDouble(this.longitude);
      oprot.writeFieldEnd();
    }
    if (isSetAltitude()) {
      oprot.writeFieldBegin(ALTITUDE_FIELD_DESC);
      oprot.writeDouble(this.altitude);
      oprot.writeFieldEnd();
    }
    if (this.author != null) {
      if (isSetAuthor()) {
        oprot.writeFieldBegin(AUTHOR_FIELD_DESC);
        oprot.writeString(this.author);
        oprot.writeFieldEnd();
      }
    }
    if (this.source != null) {
      if (isSetSource()) {
        oprot.writeFieldBegin(SOURCE_FIELD_DESC);
        oprot.writeString(this.source);
        oprot.writeFieldEnd();
      }
    }
    if (this.sourceURL != null) {
      if (isSetSourceURL()) {
        oprot.writeFieldBegin(SOURCE_URL_FIELD_DESC);
        oprot.writeString(this.sourceURL);
        oprot.writeFieldEnd();
      }
    }
    if (this.sourceApplication != null) {
      if (isSetSourceApplication()) {
        oprot.writeFieldBegin(SOURCE_APPLICATION_FIELD_DESC);
        oprot.writeString(this.sourceApplication);
        oprot.writeFieldEnd();
      }
    }
    if (isSetShareDate()) {
      oprot.writeFieldBegin(SHARE_DATE_FIELD_DESC);
      oprot.writeI64(this.shareDate);
      oprot.writeFieldEnd();
    }
    oprot.writeFieldStop();
    oprot.writeStructEnd();
  }

  public String toString() {
    StringBuffer sb = new StringBuffer("NoteAttributes(");
    boolean first = true;

    if (isSetSubjectDate()) {
      sb.append("subjectDate:");
      sb.append(this.subjectDate);
      first = false;
    }
    if (isSetLatitude()) {
      if (!first) sb.append(", ");
      sb.append("latitude:");
      sb.append(this.latitude);
      first = false;
    }
    if (isSetLongitude()) {
      if (!first) sb.append(", ");
      sb.append("longitude:");
      sb.append(this.longitude);
      first = false;
    }
    if (isSetAltitude()) {
      if (!first) sb.append(", ");
      sb.append("altitude:");
      sb.append(this.altitude);
      first = false;
    }
    if (isSetAuthor()) {
      if (!first) sb.append(", ");
      sb.append("author:");
      if (this.author == null) {
        sb.append("null");
      } else {
        sb.append(this.author);
      }
      first = false;
    }
    if (isSetSource()) {
      if (!first) sb.append(", ");
      sb.append("source:");
      if (this.source == null) {
        sb.append("null");
      } else {
        sb.append(this.source);
      }
      first = false;
    }
    if (isSetSourceURL()) {
      if (!first) sb.append(", ");
      sb.append("sourceURL:");
      if (this.sourceURL == null) {
        sb.append("null");
      } else {
        sb.append(this.sourceURL);
      }
      first = false;
    }
    if (isSetSourceApplication()) {
      if (!first) sb.append(", ");
      sb.append("sourceApplication:");
      if (this.sourceApplication == null) {
        sb.append("null");
      } else {
        sb.append(this.sourceApplication);
      }
      first = false;
    }
    if (isSetShareDate()) {
      if (!first) sb.append(", ");
      sb.append("shareDate:");
      sb.append(this.shareDate);
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws TException {
    // check for required fields
  }

}

